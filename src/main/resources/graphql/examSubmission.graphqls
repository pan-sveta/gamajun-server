extend type Query {
    examSubmissions: [ExamSubmission!]!
    examSubmissionById(id: String!): ExamSubmission
    myExamSubmissions: [ExamSubmission!]!
    examSubmissionsByExamId(examId: String!): [ExamSubmission!]!
}

extend type Mutation {
    "Delete exam submission"
    deleteExamSubmission(id: String!): Boolean
    "Checkpoint exam submission"
    checkpointExamSubmission(input: ExamSubmissionCheckpointInput!): ExamSubmission!
    "Submit exam submission"
    submitExamSubmission(input: ExamSubmissionSubmitInput!): ExamSubmission!
    "Grade exam submission"
    gradeExamSubmission(input: ExamSubmissionGradeInput!): ExamSubmission!

}

##################
#Exam submissions#
##################

type ExamSubmission {
    id: ID!
    exam: Exam!
    assignment: Assignment!
    xml: String
    startedAt: String!
    submittedAt: String
    user: User!
    examSubmissionState: ExamSubmissionState!
    validatorReport: ValidatorReport
    points: Float
    comment: String
}

input ExamSubmissionCheckpointInput {
    id: ID
    xml: String
}

input ExamSubmissionSubmitInput {
    id: ID
    xml: String
}

input ExamSubmissionGradeInput {
    id: ID
    points: Float
    comment: String
}

enum ExamSubmissionState {
    Draft,
    Submitted,
    Graded
}